from scipy.linalg import solve_triangular
import numpy as np
def solve_qr(A,rhs):
    if get_rank(A)==False:
        return 
    Q,R=get_qr(A)
    Qt=np.transpose(Q)
    rhs=np.matmul(Qt, rhs)
    m,n=np.shape(A)
    rhs_u=[]
    rhs_l=[]
    for counter in range(n+1):
        rhs_u.append(rhs[counter])
    for counter in range(n+1, m+1):
        rhs_l.append(rhs[cpunter])
    
    
    solve_triangular(A_u, rhs_u)  
    
def get_resid(A, rhs):
    if get_rank(A)==False:
        return 
    Q,R=get_qr(A)
    Qt=np.transpose(Q)
    rhs=np.matmul(Qt, rhs)
    m,n=np.shape(A)
    rhs_l=[]
    for counter in range(n+1, m+1):
        rhs_l.append(rhs[cpunter])
    np.linalg.norm(rhs_l, 2)
    
    
